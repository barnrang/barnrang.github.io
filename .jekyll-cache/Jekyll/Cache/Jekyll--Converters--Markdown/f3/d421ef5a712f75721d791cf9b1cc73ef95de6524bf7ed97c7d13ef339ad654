I"°H<p>‡∏ô‡∏µ‡πà‡∏Å‡πá‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏ö‡∏ó‡∏ß‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡∏ó‡∏≥‡∏°‡∏≤‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå CS231 Convolutional Neural Networks for Visual Recognition ‡πÅ‡∏•‡∏∞‡∏´‡∏ß‡∏±‡∏á‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏¥‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡∏ó‡∏≤‡∏á‡∏°‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏ô‡πÉ‡∏à‡πÉ‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á machine learning
‡∏´‡∏≤‡∏Å‡∏™‡∏ô‡πÉ‡∏à‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏î‡πâ‡∏≤‡∏ô image recognition ‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏ß‡∏Å neural networking ‡∏Å‡πá‡∏Ç‡∏≠‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡πÑ‡∏õ‡∏•‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏î‡∏π
‡∏Ñ‡∏£‡∏±‡∏ö ‡∏ó‡∏∏‡∏Å‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡∏ä‡∏°‡∏ü‡∏£‡∏µ‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ö‡πâ‡∏≤‡∏ô‡πÉ‡∏´‡πâ‡∏î‡πâ‡∏ß‡∏¢</p>

<p>‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏™‡∏∑‡πà‡∏≠‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©‡∏Å‡πá‡∏≠‡∏≤‡∏à‡∏¢‡∏≤‡∏Å‡∏ï‡πà‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Å‡πá‡∏´‡∏ß‡∏±‡∏á‡∏ß‡πà‡∏≤‡∏ö‡∏•‡πä‡∏≠‡∏Å‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô</p>

<p>Ref: <a href="http://cs231n.stanford.edu/" target="blank"> http://cs231n.stanford.edu/ </a>
<!--more--></p>

<h3 id="‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°">‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°</h3>
<p>‡∏Å‡πà‡∏≠‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡πÄ‡∏•‡∏¢‡∏Å‡πá‡∏°‡∏≤‡∏•‡∏≠‡∏á‡∏™‡∏≥‡∏£‡∏ß‡∏à‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏∏‡∏¢‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà ‡∏ö‡∏≠‡∏Å‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏•‡∏¢‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ
‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ñ‡∏ì‡∏¥‡∏ï‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡πÉ‡∏ô‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ô‡∏∂‡∏á‡∏ã‡∏∂‡πà‡∏á‡∏à‡∏∞‡∏ö‡∏≠‡∏Å‡∏Å‡∏•‡πà‡∏≤‡∏ß‡∏Å‡∏±‡∏ô‡πÉ‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ</p>
<ol>
  <li>Calculus ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏°‡∏´‡∏≤‡∏•‡∏±‡∏¢ (I,II) : partial differential, chain rule, Jacobian Matrix etc.
Calculus ‡∏°‡∏õ‡∏•‡∏≤‡∏¢‡∏Å‡πá‡πÑ‡∏õ‡∏£‡∏≠‡∏î‡πÅ‡∏ï‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏≤‡∏≠‡πà‡∏≤‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏ô‡∏¥‡∏î‡∏´‡∏ô‡πà‡∏≠‡∏¢</li>
  <li>Linear Algebra ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏°‡∏´‡∏≤‡∏•‡∏±‡∏¢ (I,II) : basic operation (sum, product, multiplication), SVD
‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ñ‡∏¢‡∏ä‡∏¥‡∏ô‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ matrix ‡πÅ‡∏•‡∏∞ vector (‡∏°‡∏¥‡∏ï‡∏¥‡πÉ‡∏î‡πÜ) ‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡πÇ‡∏≠‡πÄ‡∏Ñ</li>
  <li>‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ñ‡∏¢‡∏ä‡∏¥‡∏ô‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏°‡∏¥‡πà‡∏á ‡πÄ‡∏ä‡πà‡∏ô python, C, C++</li>
</ol>

<p>‡∏´‡∏≤‡∏Å‡∏Ç‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡πÉ‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡πà‡∏≠‡∏¢‡πÜ‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏õ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡πá‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÑ‡∏î‡πâ ‡πÅ‡∏ï‡πà‡∏ö‡∏≠‡∏Å‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ß‡πà‡∏≤‡∏ñ‡πâ‡∏≤‡∏Ç‡πâ‡∏≠ 1 ‡∏Å‡∏±‡∏ö 2 ‡πÑ‡∏°‡πà‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á‡∏û‡∏≠‡∏Å‡πá‡∏≠‡∏≤‡∏à‡∏¢‡∏≤‡∏Å‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏ô‡∏∂‡∏á
(‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏Å‡πá‡πÑ‡∏´‡∏ß‡πÅ‡∏´‡∏•‡∏∞)</p>

<h3 id="‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢">‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢</h3>
<p>‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏£‡∏Å‡πÄ‡∏£‡∏≤‡∏°‡∏≤‡∏î‡∏π‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏Å‡∏±‡∏ô</p>

<p>‡∏ä‡∏∏‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ß‡πà‡∏≤ CIFAR-10 ‡∏´‡∏£‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏ 10 ‡∏ä‡∏ô‡∏¥‡∏î(class)‡∏°‡∏µ ‡∏´‡∏°‡∏≤ ‡πÅ‡∏°‡∏ß ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡∏¥‡∏ô ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏ô
‡∏ã‡∏∂‡πà‡∏á‡∏Å‡πá‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏°‡∏≤‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å <a href="http://www.cs.toronto.edu/~kriz/cifar.html">CIFAR-10 data</a></p>

<p><img src="http://cs231n.github.io/assets/nn.jpg" alt="CIFAR-10" />
‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏Ç‡∏ô‡∏≤‡∏î 32 x 32 ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏û‡∏™‡∏µ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏á‡∏Ñ‡πå‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö RGB ‡∏´‡∏£‡∏∑‡∏≠‡∏ñ‡πâ‡∏≤‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏°‡∏¥‡∏ï‡∏¥‡πÉ‡∏´‡∏°‡πà‡∏Å‡πá 32 x 32 x 3</p>

<h3 id="nearest-neighbor-classifier">Nearest Neighbor Classifier</h3>
<p>‡∏™‡∏°‡∏°‡∏∏‡∏ï‡∏¥‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏à‡∏∏‡∏î \(A(0,0),B(3,0),C(2,2)\) ‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏ô‡∏£‡∏∞‡∏ô‡∏≤‡∏ö ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏á‡∏ß‡πà‡∏≤‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á \(B\) ‡∏Å‡∏±‡∏ö \(C\) ‡∏≠‡∏±‡∏ô‡πÑ‡∏´‡∏ô‡∏≠‡∏¢‡∏π‡πà
‡πÉ‡∏Å‡∏•‡πâ \(A\) ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏Å‡∏±‡∏ô? ‡∏ñ‡πâ‡∏≤‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏°‡∏≤‡∏Å‡πá‡πÉ‡∏ä‡πâ‡∏™‡∏π‡∏ï‡∏£‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á</p>

\[d(A,B)=|\vec{A}-\vec{B}| = |(-3,0)|\]

<p>‡∏ã‡∏∂‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏£‡∏¥‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á (distance) ‡∏°‡∏±‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ô‡∏¥‡∏¢‡∏≤‡∏°‡πÅ‡∏Ñ‡πà‡πÅ‡∏ö‡∏ö‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô ‡πÅ‡∏ï‡πà‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏µ‡∏ñ‡∏∂‡∏á‡∏™‡∏≠‡∏á‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡∏ç‡πà‡πÜ
‡∏ó‡∏µ‡πà‡∏ô‡∏¥‡∏¢‡∏°‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ô ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡πÅ‡∏£‡∏Å‡∏Ñ‡∏∑‡∏≠ ‚ÄúL1 distance‚Äù</p>

\[|(a,b)| = |a| + |b| \\
 d(A,B) = |-3| + |0| = 3 \\
 d(A,C) = |-2| + |-2| = 4\]

<p>‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏£‡∏∏‡∏õ‡πÑ‡∏î‡πâ‡∏ß‡πà‡∏≤ \(B\) ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏Å‡∏•‡πâ \(A\) ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ \(C\) ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö L1 distance</p>

<p>‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏Å‡πá‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏Ñ‡∏∏‡πâ‡∏ô‡πÄ‡∏Ñ‡∏¢‡∏Å‡∏±‡∏ô‡∏î‡∏µ‡∏´‡∏£‡∏∑‡∏≠ L2 distance</p>

\[|(a,b)| = \sqrt{a^2 + b^2} \\
d(A,B) = \sqrt{(-3)^2 + 0^2}=3 \\
d(A,C) = \sqrt{(-2)^2 + (-2)^2}=2\sqrt{2}&lt;2.9\]

<p>‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏£‡∏∏‡∏õ‡πÑ‡∏î‡πâ‡∏ß‡πà‡∏≤ \(C\) ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏Å‡∏•‡πâ \(A\) ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ \(B\) ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö L2 distance</p>

<p>‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏£‡∏£‡∏Å‡∏∞‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô ‡∏™‡∏°‡∏°‡∏∏‡∏ï‡∏¥‡πÄ‡∏£‡∏≤‡∏°‡∏µ‡∏£‡∏π‡∏õ‡∏™‡∏≠‡∏á‡∏£‡∏π‡∏õ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏ö‡∏Å‡∏±‡∏ö‡∏Å‡∏£‡∏∞‡∏ï‡πà‡∏≤‡∏¢ ‡πÄ‡∏£‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡∏•‡∏≠‡∏á‡πÄ‡∏≠‡∏≤‡∏≠‡∏µ‡∏Å‡∏£‡∏π‡∏õ‡∏°‡∏≤‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ö‡∏Å‡∏ö‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤
‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏£‡∏∞‡∏ï‡πà‡∏≤‡∏¢‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏Å‡∏±‡∏ô‡πÅ‡∏ô‡πà ‡πÄ‡∏£‡∏≤‡∏Ñ‡∏ß‡∏£‡∏à‡∏∞‡∏ó‡∏≥‡πÑ‡∏á? ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏£‡∏∞‡∏¢‡∏∞‡∏´‡πà‡∏≤‡∏á</p>

<p>‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡πÄ‡∏£‡∏≤‡∏Å‡πá‡∏à‡∏∞‡∏ó‡∏≥‡∏Å‡∏≤‡∏£ ‚Äú‡∏Ñ‡∏•‡∏µ‡πà‚Äù ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤‡πÉ‡∏´‡πâ‡∏Å‡∏•‡∏≤‡∏¢‡πÄ‡∏õ‡πá‡∏ô vector 32 x 32 x 3 = 3072 ‡∏°‡∏¥‡∏ï‡∏¥ ‡∏à‡∏≤‡∏Å‡∏ô‡∏±‡πâ‡∏ô‡∏Å‡πá‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏£‡∏∞‡∏¢‡∏∞‡∏´‡πà‡∏≤‡∏á
‡∏Å‡∏±‡∏ö‡∏£‡∏π‡∏õ‡∏Å‡∏ö‡πÅ‡∏•‡∏∞‡∏Å‡∏£‡∏∞‡∏ï‡πà‡∏≤‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏Ñ‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏î‡∏π‡∏ß‡πà‡∏≤‡∏≠‡∏±‡∏ô‡πÑ‡∏´‡∏ô‡πÉ‡∏Å‡∏•‡πâ‡∏Å‡∏ß‡πà‡∏≤‡∏Å‡∏±‡∏ô</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">dim</span> <span class="o">=</span> <span class="mi">32</span> <span class="o">*</span> <span class="mi">32</span> <span class="o">*</span> <span class="mi">3</span>
<span class="n">frog</span><span class="p">,</span> <span class="n">rabbit</span><span class="p">,</span> <span class="n">test</span> <span class="o">=</span> <span class="n">data</span> <span class="c1">#32*32*3 Images
</span><span class="n">f</span><span class="p">,</span><span class="n">r</span><span class="p">,</span><span class="n">t</span> <span class="o">=</span> <span class="n">frog</span><span class="p">.</span><span class="n">reshape</span><span class="p">(</span><span class="n">dim</span><span class="p">),</span> <span class="n">rabbit</span><span class="p">.</span><span class="n">reshape</span><span class="p">(</span><span class="n">dim</span><span class="p">),</span> <span class="n">test</span><span class="p">.</span><span class="n">reshape</span><span class="p">(</span><span class="n">dim</span><span class="p">)</span>
<span class="k">if</span> <span class="n">dist</span><span class="p">(</span><span class="n">f</span><span class="p">,</span><span class="n">t</span><span class="p">)</span> <span class="o">&lt;</span> <span class="n">dist</span><span class="p">(</span><span class="n">r</span><span class="p">,</span><span class="n">t</span><span class="p">):</span>
  <span class="k">print</span><span class="p">(</span><span class="s">"It looks like frog"</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
  <span class="k">print</span><span class="p">(</span><span class="s">"It looks like rabbit"</span><span class="p">)</span></code></pre></figure>

<h3 id="‡∏•‡∏á‡∏°‡∏∑‡∏≠‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô">‡∏•‡∏á‡∏°‡∏∑‡∏≠‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô</h3>
<p>‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏à‡∏£‡∏¥‡∏á‡∏Å‡πá‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏¢‡∏≠‡∏∞‡πÜ ‡∏°‡∏≤‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ö‡∏±‡∏ç‡∏ä‡∏µ ‡∏à‡∏≤‡∏Å‡∏ô‡∏±‡πâ‡∏ô‡∏û‡∏≠‡∏ñ‡∏∂‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡πá‡∏à‡∏±‡∏ö‡∏°‡∏≤‡∏´‡∏≤‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
‡πÅ‡∏•‡πâ‡∏ß‡∏à‡∏∂‡∏á‡πÄ‡∏≠‡∏≤‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà ‚Äú‡πÉ‡∏Å‡∏•‡πâ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‚Äù ‡πÇ‡∏Ñ‡πâ‡∏î‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏ï‡∏≤‡∏° assignment ‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡∏≤‡πÉ‡∏´‡πâ‡∏°‡∏≤‡∏ã‡∏∂‡πà‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô class KNearestNeighbor</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">train</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">X</span><span class="p">,</span> <span class="n">y</span><span class="p">):</span> <span class="c1">#‡πÄ‡∏Å‡πá‡∏ö training data ‡πÄ‡∏≠‡∏≤‡πÑ‡∏ß‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏ï‡∏≠‡∏ô test
</span>    <span class="bp">self</span><span class="p">.</span><span class="n">X_train</span> <span class="o">=</span> <span class="n">X</span>
    <span class="bp">self</span><span class="p">.</span><span class="n">y_train</span> <span class="o">=</span> <span class="n">y</span></code></pre></figure>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">compute_distances_two_loops</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">X</span><span class="p">):</span>
  <span class="s">"""
  Compute the distance between each test point in X and each training point
  in self.X_train using a nested loop over both the training data and the
  test data.

  Inputs:
  - X: A numpy array of shape (num_test, D) containing test data.

  Returns:
  - dists: A numpy array of shape (num_test, num_train) where dists[i, j]
    is the Euclidean distance between the ith test point and the jth training
    point.
  """</span>
  <span class="n">num_test</span> <span class="o">=</span> <span class="n">X</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
  <span class="n">num_train</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">X_train</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
  <span class="n">dists</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">zeros</span><span class="p">((</span><span class="n">num_test</span><span class="p">,</span> <span class="n">num_train</span><span class="p">))</span>
  <span class="c1">#‡∏ß‡∏ô‡∏™‡∏≠‡∏á‡∏£‡∏≠‡∏ö‡∏ï‡∏≤‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô training sample ‡∏Å‡∏±‡∏ö test sample
</span>  <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="n">num_test</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="n">num_train</span><span class="p">):</span>
      <span class="n">temp</span> <span class="o">=</span> <span class="n">X</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">-</span> <span class="bp">self</span><span class="p">.</span><span class="n">X_train</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="c1">#‡∏ú‡∏•‡∏ï‡πà‡∏≤‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏ß‡πá‡∏Å‡πÄ‡∏ï‡∏≠‡∏£‡πå
</span>      <span class="n">dists</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">temp</span><span class="p">.</span><span class="n">dot</span><span class="p">(</span><span class="n">temp</span><span class="p">.</span><span class="n">T</span><span class="p">)</span> <span class="c1">#L2 distance
</span>  <span class="k">return</span> <span class="n">dists</span></code></pre></figure>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">predict</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">X</span><span class="p">):</span>
  <span class="n">dists</span> <span class="o">=</span> <span class="n">compute_distances_two_loops</span><span class="p">(</span><span class="n">X</span><span class="p">)</span>
  <span class="n">num_test</span> <span class="o">=</span> <span class="n">dists</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
  <span class="n">y_pred</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">zeros</span><span class="p">(</span><span class="n">num_test</span><span class="p">)</span>
  <span class="n">closest_y</span> <span class="o">=</span> <span class="n">dists</span><span class="p">.</span><span class="n">argmax</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span> <span class="c1">#‡∏´‡∏≤‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á(index)‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢‡∏™‡∏∏‡∏î
</span>  <span class="n">y_pred</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">y_train</span><span class="p">[</span><span class="n">closest_y</span><span class="p">]</span> <span class="c1">#‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ú‡∏•‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏ó‡∏∏‡∏Å‡πÜ‡∏ï‡∏±‡∏ß‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏ï‡∏≥‡πÅ‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏°‡∏≤
</span>  <span class="k">return</span> <span class="n">y_pred</span></code></pre></figure>

<h3 id="knn-classifer">kNN-classifer</h3>
<p>‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏µ‡πâ‡∏Å‡πá‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏±‡∏ô‡∏à‡∏ö NN-classifier ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÅ‡∏¢‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÇ‡∏î‡∏¢‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà ‚Äú‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á‚Äù ‡∏ó‡∏µ‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î</p>

<p>‡πÅ‡∏ï‡πà‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£‡∏Å‡πá‡∏ï‡∏≤‡∏° ‡∏Å‡∏≤‡∏£‡πÅ‡∏¢‡∏Å‡πÅ‡∏¢‡πà‡∏≤‡∏á‡∏ô‡∏µ‡πâ‡∏Å‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡∏¥‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÑ‡∏î‡πâ‡πÄ‡∏ä‡πà‡∏ô‡∏Å‡∏±‡∏ô ‡∏ñ‡πâ‡∏≤‡∏™‡∏°‡∏°‡∏∏‡∏ï‡∏¥‡πÄ‡∏Å‡∏¥‡∏î‡∏ï‡∏±‡∏ß‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏•‡πâ‡∏≠‡∏°‡∏£‡∏≠‡∏ö‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢ class ‚Äú‡∏Å‡∏£‡∏∞‡∏ï‡πà‡∏≤‡∏¢‚Äù ‡πÅ‡∏ï‡πà‡∏î‡∏±‡∏ô‡∏°‡∏µ‡∏à‡∏∏‡∏î‡πÜ‡∏ô‡∏∂‡∏á‡∏Ç‡∏≠‡∏á class ‚Äú‡∏Å‡∏ö‚Äù ‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡∏õ‡∏£‡∏∞‡∏Å‡∏ö‡πÉ‡∏Å‡∏•‡πâ ‡πÄ‡∏£‡∏≤‡∏Ñ‡∏ß‡∏£‡∏à‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏ß‡πà‡∏≤‡∏°‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏ö‡∏à‡∏£‡∏¥‡∏á‡πÜ ‡∏´‡∏£‡∏∑‡∏≠? ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏´‡∏ï‡∏∏‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ (Fail to generalize) ‡∏´‡∏£‡∏∑‡∏≠‡∏ö‡∏≤‡∏á‡∏ó‡∏µ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏Å‡∏±‡∏ô‡∏ß‡πà‡∏≤ overfitting</p>

<p>‡∏á‡∏±‡πâ‡∏ô‡∏•‡∏≠‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏ó‡∏ô‡∏ô‡∏¥‡∏™‡∏Å‡πá‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡∏Å‡∏±‡∏ô‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 5 ‡πÄ‡∏ã‡∏ï‡∏ß‡πà‡∏≤‡πÉ‡∏Ñ‡∏£‡∏ä‡∏ô‡∏∞‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏Å‡∏±‡∏ô ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡πÅ‡∏Ñ‡πà‡∏£‡∏≠‡∏ö‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏≠‡∏∞‡πÑ‡∏£‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πà‡πÑ‡∏´‡∏°‡∏•‡πà‡∏∞</p>

<p>‡∏ó‡∏µ‡∏ô‡∏µ‡πâ‡∏°‡∏≠‡∏á‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏ó‡∏µ‡πà NN-classifier ‡∏ñ‡πâ‡∏≤‡πÄ‡∏£‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏°‡∏≤‡∏´‡∏•‡∏≤‡∏¢‡πÜ‡∏à‡∏∏‡∏î(‡∏™‡∏°‡∏°‡∏∏‡∏ï‡∏¥ k ‡∏à‡∏∏‡∏î)‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡πÅ‡∏•‡πâ‡∏ß‡∏î‡∏π‡∏ß‡πà‡∏≤ class ‡πÑ‡∏´‡∏ô‡∏°‡∏µ‡πÄ‡∏¢‡∏≠‡∏∞‡∏™‡∏∏‡∏î
‡πÅ‡∏•‡πâ‡∏ß‡∏à‡∏∂‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô class ‡∏ô‡∏±‡πâ‡∏ô‡∏à‡∏∞‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤‡∏£‡∏∂‡πÄ‡∏õ‡∏•‡πà‡∏≤ ‡∏ã‡∏∂‡πà‡∏á‡∏ô‡πà‡∏≤‡∏à‡∏∞‡∏ï‡∏≠‡∏ö‡πÑ‡∏°‡πà‡∏¢‡∏≤‡∏Å‡∏ß‡πà‡∏≤ ‚Äú‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô‚Äù</p>

<p>‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ NN-classifier ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏°‡∏≤ k ‡∏à‡∏∏‡∏î‡∏ô‡∏±‡πâ‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ß‡πà‡∏≤ <strong>kNN-classifer</strong>
‡∏™‡∏°‡∏°‡∏∏‡∏ï‡∏¥‡πÄ‡∏£‡∏≤‡πÉ‡∏ä‡πâ 5-NN Classifier ‡πÅ‡∏•‡πâ‡∏ß class ‡∏Ç‡∏≠‡∏á 5 ‡∏à‡∏∏‡∏î‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡∏Ñ‡∏∑‡∏≠ [‡∏´‡∏°‡∏≤,‡∏´‡∏°‡∏≤,‡πÑ‡∏Å‡πà,‡πÅ‡∏°‡∏ß,‡∏´‡∏°‡∏π] ‡πÄ‡∏£‡∏≤‡∏Å‡πá‡∏à‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ì‡∏ß‡πà‡∏≤ ‚Äú‡∏´‡∏°‡∏≤‚Äù
<img src="http://cs231n.github.io/assets/knn.jpeg" alt="kNN-classifier" />
<em>‡∏™‡∏µ‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏à‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏∂‡∏á‡∏ß‡πà‡∏≤‡∏à‡∏∏‡∏î‡∏ô‡∏±‡πâ‡∏ô‡πÜ‡∏ñ‡∏π‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡πÄ‡∏õ‡πá‡∏ô class ‡πÉ‡∏î ‡∏™‡∏±‡∏á‡πÄ‡∏Å‡∏ï‡πÑ‡∏î‡πâ‡∏ß‡πà‡∏≤ NN classifier ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ö‡∏Å‡∏û‡∏£‡πà‡∏≠‡∏á‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏¢‡∏Å class ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô</em></p>

<p>‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£‡∏Å‡πá‡∏î‡∏µ kNN-classifier ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏ô‡∏±‡∏Å‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÅ‡∏ô‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏°‡∏±‡∏ô‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß‡∏ï‡πà‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÅ‡∏°‡πâ‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡πÄ‡∏ä‡πà‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏¢‡∏±‡∏ö‡∏ã‡πâ‡∏≤‡∏¢, ‡∏Ç‡∏ß‡∏≤‡πÑ‡∏õ‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏≠‡∏á‡∏Å‡πá‡∏≠‡∏≤‡∏à‡∏ó‡∏≥‡πÉ‡∏´‡πâ
distance ‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤‡∏ß‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡πÑ‡∏î‡πâ ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 35-36% ‡∏ã‡∏∂‡πà‡∏á‡∏Å‡πá‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏î‡∏≤‡∏°‡∏±‡πà‡∏ß‡πÅ‡∏ï‡πà‡∏Å‡πá‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏î‡∏µ‡∏°‡∏≤‡∏Å‡∏ô‡∏±‡∏Å‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏°‡∏µ model ‡∏≠‡∏∑‡πà‡∏ô‡πÜ‡∏≠‡∏µ‡∏Å‡∏°‡∏≤‡∏Å‡∏°‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏Å‡∏ß‡πà‡∏≤ ‡∏°‡∏µ‡∏´‡∏•‡∏±‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞ <strong>‡∏¢‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤</strong></p>

<p>‡πÉ‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ñ‡∏∂‡∏á‡∏à‡∏∏‡∏î‡πÜ ‡∏Å‡πá‡∏ô‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ó‡∏≥ Assignment1 kNN-classifier ‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Å‡πá‡∏Ñ‡∏∑‡∏≠‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô
 model ‡∏´‡∏£‡∏∑‡∏≠ classifier ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡πÑ‡∏î‡πâ‡∏ù‡∏∂‡∏Å‡∏ã‡πâ‡∏≠‡∏°‡πÑ‡∏ß‡πâ‡πÅ‡∏•‡∏∞‡∏≠‡∏µ‡∏Å‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£ vectorize ‡∏ã‡∏∂‡πà‡∏á‡∏à‡∏∞‡∏Å‡∏•‡πà‡∏≤‡∏ß‡πÉ‡∏ô‡∏ö‡∏ó‡∏´‡∏ô‡πâ‡∏≤</p>

<p><em>‡∏Ç‡∏≠‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì CS231 Convolutional Neural Networks for Visual Recognition ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û</em></p>
:ET